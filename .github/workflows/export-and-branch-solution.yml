name: export-and-branch-solution
# Export solution from DEV environment
#  unpack it and prepare, commit and push a git branch with the changes

on:
  workflow_dispatch:
    inputs:
      # Change this value
      solution_name:
        description: 'name of the solution to worked on from Power Platform'
        required: true
        default: GitIntegrationTest
       #Do Not change these values
      solution_exported_folder:
        description: 'folder name for staging the exported solution *do not change*'
        required: true
        default: out/exported/
      solution_folder:
        description: 'staging the unpacked solution folder before check-in *do not change*'
        required: true
        default: out/solutions/
      solution_target_folder: 
       description: 'folder name to be created and checked in *do not change*'
       required: true
       default: solutions/
env:
#edit your values here
  ENVIRONMENT_URL: 'https://orgd6ea41a6.crm.dynamics.com'
  CLIENT_ID: '49740080-c68e-4ac2-b88f-3c2abedc05f9'
  TENANT_ID: '44ae661a-ece6-41aa-bc96-7c2c85a08941'
permissions:
  contents: write
jobs:
  export-from-dev:
    runs-on: ubuntu-latest
    # or you can say runs-on: ubuntu-latest
    env:
      RUNNER_DEBUG: 1

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true
        
    - name: Install Power Platform Tools
      uses: microsoft/powerplatform-actions/actions-install@v1
      
    # - name: who-am-i action
    #   uses: microsoft/powerplatform-actions/who-am-i@v1
    #   with:
    #     environment-url: ${{env.ENVIRONMENT_URL}}
    #     app-id: ${{env.CLIENT_ID}}
    #     client-secret: ${{ secrets.PowerPlatformSPN }}
    #     tenant-id: ${{env.TENANT_ID}}


    - name: export-solution action
      uses: microsoft/powerplatform-actions/export-solution@v1
      with:
        environment-url: ${{env.ENVIRONMENT_URL}}
        app-id: ${{env.CLIENT_ID}}
        client-secret: ${{ secrets.PowerPlatformSPN }}
        tenant-id: ${{env.TENANT_ID}}
        solution-name: ${{ github.event.inputs.solution_name }}
        solution-output-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip

    - name: unpack-solution action
      uses: microsoft/powerplatform-actions/unpack-solution@v1
      with:
        solution-file: ${{ github.event.inputs.solution_exported_folder}}/${{ github.event.inputs.solution_name }}.zip
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-type: 'Unmanaged'
        overwrite-files: true

    - name: branch-solution, prepare it for a PullRequest
      uses: microsoft/powerplatform-actions/branch-solution@v1
      with:
        solution-folder: ${{ github.event.inputs.solution_folder}}/${{ github.event.inputs.solution_name }}
        solution-target-folder: ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        allow-empty-commit: true

    # Step 1: Checkout the source branch
    - name: Checkout Source Branch
      uses: actions/checkout@v3
      with:
        ref: ${GITHUB_REF#refs/heads/}

    # Step 2: Copy the folder to a temporary directory
    - name: Copy Folder
      run: |
        mkdir -p temp-folder
        cp -R ${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }}  temp-folder/ # Replace with the folder path you want to copy

    # Step 3: Checkout the target branch
    - name: Checkout Target Branch
      run: |
        git fetch origin main
        git checkout main

    # Step 4: Move the folder to the target branch
    - name: Move Folder to Target Branch
      run: |
        cp -R temp-folder/${{ github.event.inputs.solution_target_folder}}/${{ github.event.inputs.solution_name }} ${{ github.event.inputs.solution_target_folder}}/ # Adjust paths as needed
        git add .
        git commit -m "Copied folder from source-branch-name to target-branch-name"
        git push origin main
